{
  "api/AoTBinLib.Converters.Compressor.html": {
    "href": "api/AoTBinLib.Converters.Compressor.html",
    "title": "Class Compressor | AoTBinTool",
    "keywords": "Class Compressor ZLib compressor. Inheritance Object Compressor Implements IInitializer < EndiannessMode > Namespace : AoTBinLib.Converters Assembly : AoTBinLib.dll Syntax public class Compressor : IConverter<BinaryFormat, BinaryFormat>, IInitializer<EndiannessMode> Methods | Improve this Doc View Source Convert(BinaryFormat) Compress (deflate) a BinaryFormat. Declaration public BinaryFormat Convert(BinaryFormat source) Parameters Type Name Description BinaryFormat source Source BinaryFormat. Returns Type Description BinaryFormat Deflated BinaryFormat. | Improve this Doc View Source Initialize(EndiannessMode) Converter initializer. Declaration public void Initialize(EndiannessMode parameters) Parameters Type Name Description EndiannessMode parameters Endianness. Implements IInitializer<>"
  },
  "api/AoTBinLib.Converters.Decompressor.html": {
    "href": "api/AoTBinLib.Converters.Decompressor.html",
    "title": "Class Decompressor | AoTBinTool",
    "keywords": "Class Decompressor ZLib decompressor. Inheritance Object Decompressor Implements IInitializer < EndiannessMode > Namespace : AoTBinLib.Converters Assembly : AoTBinLib.dll Syntax public class Decompressor : IConverter<BinaryFormat, BinaryFormat>, IInitializer<EndiannessMode> Methods | Improve this Doc View Source Convert(BinaryFormat) Decompress (inflate) a BinaryFormat. Declaration public BinaryFormat Convert(BinaryFormat source) Parameters Type Name Description BinaryFormat source Source BinaryFormat. Returns Type Description BinaryFormat Inflated BinaryFormat. | Improve this Doc View Source Initialize(EndiannessMode) Converter initializer. Declaration public void Initialize(EndiannessMode parameters) Parameters Type Name Description EndiannessMode parameters Endianness. Implements IInitializer<>"
  },
  "api/AoTBinLib.Converters.html": {
    "href": "api/AoTBinLib.Converters.html",
    "title": "Namespace AoTBinLib.Converters | AoTBinTool",
    "keywords": "Namespace AoTBinLib.Converters Classes Compressor ZLib compressor. Decompressor ZLib decompressor. ReaderParameters Parameters needed for BIN reading. StandardBinCompressor Compresses all marked nodes. StandardBinDecompressor Decompresses all compressed nodes. StandardBinReader Attack on Titan standard BIN reader. StandardBinWriter Attack on Titan standard BIN writer. WriterParameters Parameters needed for BIN writing."
  },
  "api/AoTBinLib.Converters.ReaderParameters.html": {
    "href": "api/AoTBinLib.Converters.ReaderParameters.html",
    "title": "Class ReaderParameters | AoTBinTool",
    "keywords": "Class ReaderParameters Parameters needed for BIN reading. Inheritance Object ReaderParameters Namespace : AoTBinLib.Converters Assembly : AoTBinLib.dll Syntax public class ReaderParameters : object Properties | Improve this Doc View Source Endianness Gets or sets the endianness mode of the file. Declaration public EndiannessMode Endianness { get; set; } Property Value Type Description EndiannessMode | Improve this Doc View Source FileNames Gets or sets the list of known file names. Declaration public IList<string> FileNames { get; set; } Property Value Type Description IList < String >"
  },
  "api/AoTBinLib.Converters.StandardBinCompressor.html": {
    "href": "api/AoTBinLib.Converters.StandardBinCompressor.html",
    "title": "Class StandardBinCompressor | AoTBinTool",
    "keywords": "Class StandardBinCompressor Compresses all marked nodes. Inheritance Object StandardBinCompressor Implements IInitializer < EndiannessMode > Namespace : AoTBinLib.Converters Assembly : AoTBinLib.dll Syntax public class StandardBinCompressor : IConverter<NodeContainerFormat, NodeContainerFormat>, IInitializer<EndiannessMode> Methods | Improve this Doc View Source Convert(NodeContainerFormat) Compresses all marked nodes. Declaration public NodeContainerFormat Convert(NodeContainerFormat source) Parameters Type Name Description NodeContainerFormat source Original node container. Returns Type Description NodeContainerFormat Compressed node container. | Improve this Doc View Source Initialize(EndiannessMode) Converter initializer. Declaration public void Initialize(EndiannessMode parameters) Parameters Type Name Description EndiannessMode parameters Endianness. Implements IInitializer<>"
  },
  "api/AoTBinLib.Converters.StandardBinDecompressor.html": {
    "href": "api/AoTBinLib.Converters.StandardBinDecompressor.html",
    "title": "Class StandardBinDecompressor | AoTBinTool",
    "keywords": "Class StandardBinDecompressor Decompresses all compressed nodes. Inheritance Object StandardBinDecompressor Implements IInitializer < EndiannessMode > Namespace : AoTBinLib.Converters Assembly : AoTBinLib.dll Syntax public class StandardBinDecompressor : IConverter<NodeContainerFormat, NodeContainerFormat>, IInitializer<EndiannessMode> Methods | Improve this Doc View Source Convert(NodeContainerFormat) Decompresses all compressed nodes. Declaration public NodeContainerFormat Convert(NodeContainerFormat source) Parameters Type Name Description NodeContainerFormat source Original node container. Returns Type Description NodeContainerFormat Decompressed node container. | Improve this Doc View Source Initialize(EndiannessMode) Converter initializer. Declaration public void Initialize(EndiannessMode parameters) Parameters Type Name Description EndiannessMode parameters Endianness. Implements IInitializer<>"
  },
  "api/AoTBinLib.Converters.StandardBinReader.html": {
    "href": "api/AoTBinLib.Converters.StandardBinReader.html",
    "title": "Class StandardBinReader | AoTBinTool",
    "keywords": "Class StandardBinReader Attack on Titan standard BIN reader. Inheritance Object StandardBinReader Implements IInitializer < ReaderParameters > Namespace : AoTBinLib.Converters Assembly : AoTBinLib.dll Syntax public class StandardBinReader : IConverter<BinaryFormat, NodeContainerFormat>, IInitializer<ReaderParameters> Methods | Improve this Doc View Source Convert(BinaryFormat) Deserializes a BIN archive. Declaration public NodeContainerFormat Convert(BinaryFormat source) Parameters Type Name Description BinaryFormat source BIN archive as BinaryFormat. Returns Type Description NodeContainerFormat The NodeContainerFormat. | Improve this Doc View Source Initialize(ReaderParameters) Converter initializer. Declaration public void Initialize(ReaderParameters parameters) Parameters Type Name Description ReaderParameters parameters Reader configuration. Implements IInitializer<>"
  },
  "api/AoTBinLib.Converters.StandardBinWriter.html": {
    "href": "api/AoTBinLib.Converters.StandardBinWriter.html",
    "title": "Class StandardBinWriter | AoTBinTool",
    "keywords": "Class StandardBinWriter Attack on Titan standard BIN writer. Inheritance Object StandardBinWriter Implements IInitializer < WriterParameters > Namespace : AoTBinLib.Converters Assembly : AoTBinLib.dll Syntax public class StandardBinWriter : IConverter<NodeContainerFormat, BinaryFormat>, IInitializer<WriterParameters> Methods | Improve this Doc View Source Convert(NodeContainerFormat) Serializes a BIN archive. Declaration public BinaryFormat Convert(NodeContainerFormat source) Parameters Type Name Description NodeContainerFormat source Collection of files as NodeContainerFormat. Returns Type Description BinaryFormat The BinaryFormat. | Improve this Doc View Source Initialize(WriterParameters) Converter initializer. Declaration public void Initialize(WriterParameters parameters) Parameters Type Name Description WriterParameters parameters Writer configuration. Implements IInitializer<>"
  },
  "api/AoTBinLib.Converters.WriterParameters.html": {
    "href": "api/AoTBinLib.Converters.WriterParameters.html",
    "title": "Class WriterParameters | AoTBinTool",
    "keywords": "Class WriterParameters Parameters needed for BIN writing. Inheritance Object WriterParameters Namespace : AoTBinLib.Converters Assembly : AoTBinLib.dll Syntax public class WriterParameters : object Properties | Improve this Doc View Source BlockSize Gets or sets the BIN block size. Default is 0x800. Declaration public int BlockSize { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Endianness Gets or sets the endianness mode of the file. Declaration public EndiannessMode Endianness { get; set; } Property Value Type Description EndiannessMode | Improve this Doc View Source Stream Gets or sets the stream to write to. Declaration public DataStream Stream { get; set; } Property Value Type Description DataStream"
  },
  "api/AoTBinLib.Enums.FileType.html": {
    "href": "api/AoTBinLib.Enums.FileType.html",
    "title": "Enum FileType | AoTBinTool",
    "keywords": "Enum FileType Possible file types inside a container. Namespace : AoTBinLib.Enums Assembly : AoTBinLib.dll Syntax public enum FileType : int Fields Name Description Compressed Compressed file. CompressedAlternateEndian Compressed file (other endianness). Dummy Dummy file. (Only found in PS3). Empty Empty file. Normal Normal (uncompressed) file."
  },
  "api/AoTBinLib.Enums.html": {
    "href": "api/AoTBinLib.Enums.html",
    "title": "Namespace AoTBinLib.Enums | AoTBinTool",
    "keywords": "Namespace AoTBinLib.Enums Enums FileType Possible file types inside a container."
  },
  "api/AoTBinLib.Exceptions.ExtractionException.html": {
    "href": "api/AoTBinLib.Exceptions.ExtractionException.html",
    "title": "Class ExtractionException | AoTBinTool",
    "keywords": "Class ExtractionException Exception thrown when the app can extract a file. Inheritance Object ExtractionException Namespace : AoTBinLib.Exceptions Assembly : AoTBinLib.dll Syntax public class ExtractionException : Exception Constructors | Improve this Doc View Source ExtractionException() Initializes a new instance of the ExtractionException class. Declaration public ExtractionException() | Improve this Doc View Source ExtractionException(SerializationInfo, StreamingContext) Initializes a new instance of the ExtractionException class. Declaration protected ExtractionException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source ExtractionException(String) Initializes a new instance of the ExtractionException class. Declaration public ExtractionException(string message) Parameters Type Name Description String message The error message that explains the reason for the exception. | Improve this Doc View Source ExtractionException(String, Exception) Initializes a new instance of the ExtractionException class. Declaration public ExtractionException(string message, Exception innerException) Parameters Type Name Description String message The error message that explains the reason for the exception. Exception innerException The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified."
  },
  "api/AoTBinLib.Exceptions.html": {
    "href": "api/AoTBinLib.Exceptions.html",
    "title": "Namespace AoTBinLib.Exceptions | AoTBinTool",
    "keywords": "Namespace AoTBinLib.Exceptions Classes ExtractionException Exception thrown when the app can extract a file."
  },
  "api/AoTBinLib.Types.BinFileHeader.html": {
    "href": "api/AoTBinLib.Types.BinFileHeader.html",
    "title": "Class BinFileHeader | AoTBinTool",
    "keywords": "Class BinFileHeader Default BIN file header. Inheritance Object BinFileHeader Namespace : AoTBinLib.Types Assembly : AoTBinLib.dll Syntax public class BinFileHeader : object Properties | Improve this Doc View Source BlockSize Gets or sets the block size. Declaration public int BlockSize { get; set; } Property Value Type Description Int32 | Improve this Doc View Source FileCount Gets or sets the number of files inside the archive. Declaration public int FileCount { get; set; } Property Value Type Description Int32 | Improve this Doc View Source MagicNumber Gets or sets the file magic number. Declaration public uint MagicNumber { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source Padding Gets or sets the padding bytes. Declaration public int Padding { get; set; } Property Value Type Description Int32"
  },
  "api/AoTBinLib.Types.FileInfo.html": {
    "href": "api/AoTBinLib.Types.FileInfo.html",
    "title": "Class FileInfo | AoTBinTool",
    "keywords": "Class FileInfo Extracted file info. Inheritance Object FileInfo Namespace : AoTBinLib.Types Assembly : AoTBinLib.dll Syntax public class FileInfo : object Properties | Improve this Doc View Source Index Gets or sets the file index inside the archive. Declaration public int Index { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Name Gets or sets the file name. Declaration public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Type Gets or sets the file type. Declaration public FileType Type { get; set; } Property Value Type Description FileType"
  },
  "api/AoTBinLib.Types.html": {
    "href": "api/AoTBinLib.Types.html",
    "title": "Namespace AoTBinLib.Types | AoTBinTool",
    "keywords": "Namespace AoTBinLib.Types Classes BinFileHeader Default BIN file header. FileInfo Extracted file info."
  },
  "CONTRIBUTING.html": {
    "href": "CONTRIBUTING.html",
    "title": "Contributing to the project | AoTBinTool",
    "keywords": "Contributing to the project Thanks for taking the time to contribute! ✨ In this document you will find all the information you need to make sure the project continues to be the high-quality product we want to be! Reporting issues Issues When reporting a problem, be as specific as possible. Ideally, you should provide an small snippet of code that reproduces the issue. Try to provide also the following information: OS: Linux / Windows / Mac OS Runtime: .NET Framework, Mono, .NET Core Version of the product Stacktrace if any What's happening and what you expect to happen Features If you want to ask for a new feature, first make sure it hasn't been reported yet by using the search box in the issue tab. Make sure that the feature aligns with the direction of the project. Pull Request Before starting a pull request, create an issue requesting the feature you would like to see and implement. If you are fixing a bug, create also an issue to be able to track the problem. State that you would like to work on that. The team will reply to the issue as soon as possible, discussing the proposal if needed. This guarantee that later on the Pull Request we don't reject the proposal without having a discussion first and we don't waste time. In general, the process to create a pull request is: Create an issue describing the bug or feature and state you would like to work on that. The team will cheer you and/or discuss with you the issue. Fork the project. Clone your forked project and create a git branch. Make the necessary code changes in as many commits as you want. The commit message should follow this convention: :emoji: Short description #IssueID Long description if needed. Create a pull request. After reviewing your changes and making any new commits if needed, the team will approve and merge it. For a complete list of emoji description see this repository . Code Guidelines We follow the DotNet Runtime coding style . File headers ✔️ DO put the license in the file header with this format: // // <FileName>.cs // // Author: // <AuthorName> <email@example.com> // // Copyright (c) <Year> <AuthorName> // // Permission is hereby granted, free of charge, to any person obtaining a copy // of this software and associated documentation files (the \"Software\"), to deal // in the Software without restriction, including without limitation the rights // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell // copies of the Software, and to permit persons to whom the Software is // furnished to do so, subject to the following conditions: // // The above copyright notice and this permission notice shall be included in // all copies or substantial portions of the Software. // // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN // THE SOFTWARE. Usings ✔️ DO put the using inside the namespace. ✔️ DO include all the namespaces you are using. ✔️ DO use the using statement for IDisposable types."
  },
  "dev/Changelog.html": {
    "href": "dev/Changelog.html",
    "title": "vNext (March 22, 2021) | AoTBinTool",
    "keywords": "vNext (March 22, 2021) As part of this release we had 3 issues closed. Bug #3 Exception in PS3 Japanese files Enhancements #6 Speed up #4 Slow file creation v1.0.0 (March 21, 2021) As part of this release we had 2 issues closed. Enhancements #2 Write BIN archives #1 Extract BIN archives"
  },
  "guides/Contributing.html": {
    "href": "guides/Contributing.html",
    "title": "Contributing to the project | AoTBinTool",
    "keywords": "Contributing to the project Thanks for taking the time to contribute! ✨ In this document you will find all the information you need to make sure the project continues to be the high-quality product we want to be! Reporting issues Issues When reporting a problem, be as specific as possible. Ideally, you should provide an small snippet of code that reproduces the issue. Try to provide also the following information: OS: Linux / Windows / Mac OS Runtime: .NET Framework, Mono, .NET Core Version of the product Stacktrace if any What's happening and what you expect to happen Features If you want to ask for a new feature, first make sure it hasn't been reported yet by using the search box in the issue tab. Make sure that the feature aligns with the direction of the project. Pull Request Before starting a pull request, create an issue requesting the feature you would like to see and implement. If you are fixing a bug, create also an issue to be able to track the problem. State that you would like to work on that. The team will reply to the issue as soon as possible, discussing the proposal if needed. This guarantee that later on the Pull Request we don't reject the proposal without having a discussion first and we don't waste time. In general, the process to create a pull request is: Create an issue describing the bug or feature and state you would like to work on that. The team will cheer you and/or discuss with you the issue. Fork the project. Clone your forked project and create a git branch. Make the necessary code changes in as many commits as you want. The commit message should follow this convention: :emoji: Short description #IssueID Long description if needed. Create a pull request. After reviewing your changes and making any new commits if needed, the team will approve and merge it. For a complete list of emoji description see this repository . Code Guidelines We follow the DotNet Runtime coding style . File headers ✔️ DO put the license in the file header with this format: // // <FileName>.cs // // Author: // <AuthorName> <email@example.com> // // Copyright (c) <Year> <AuthorName> // // Permission is hereby granted, free of charge, to any person obtaining a copy // of this software and associated documentation files (the \"Software\"), to deal // in the Software without restriction, including without limitation the rights // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell // copies of the Software, and to permit persons to whom the Software is // furnished to do so, subject to the following conditions: // // The above copyright notice and this permission notice shall be included in // all copies or substantial portions of the Software. // // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN // THE SOFTWARE. Usings ✔️ DO put the using inside the namespace. ✔️ DO include all the namespaces you are using. ✔️ DO use the using statement for IDisposable types."
  },
  "guides/First-Steps.html": {
    "href": "guides/First-Steps.html",
    "title": "First steps | AoTBinTool",
    "keywords": "First steps Welcome to this project!"
  },
  "index.html": {
    "href": "index.html",
    "title": "AoTBinTool | AoTBinTool",
    "keywords": "AoTBinTool This app can extract and create Attack on Titan BIN archives. It is compatible with: Attack on Titan (PC) Attack on Titan (VITA) Attack on Titan (PS3) Attack on Titan II (PC) Usage Extract files from BIN ./AoTBinTool extract --input path/to/archive.bin --output output/directory [--file-list path/to/file-list.txt] --file-list parameter is optional. Create BIN archive ./AoTBinTool build --input path/to/directory --output output/file.bin [--big-endian] --big-endian parameter is optional. Use it if BIN file is for PS3."
  },
  "README.html": {
    "href": "README.html",
    "title": "AoTBinTool | AoTBinTool",
    "keywords": "AoTBinTool This app can extract and create Attack on Titan BIN archives. It is compatible with: Attack on Titan (PC) Attack on Titan (VITA) Attack on Titan (PS3) Attack on Titan II (PC) Usage Extract files from BIN ./AoTBinTool extract --input path/to/archive.bin --output output/directory [--file-list path/to/file-list.txt] --file-list parameter is optional. Create BIN archive ./AoTBinTool build --input path/to/directory --output output/file.bin [--big-endian] --big-endian parameter is optional. Use it if BIN file is for PS3."
  }
}